{
  //#region  //*=========== React ===========
  "import React": {
    "prefix": "ir",
    "body": ["import * as React from 'react';"]
  },
  "React Functional Component": {
    "prefix": "rc",
    "body": [
      "import * as React from 'react';\n",
      "const ${1:${TM_FILENAME_BASE}}:React.FC = () => {",
      "  return (",
      "    <div>",
      "      $0",
      "    </div>",
      "  )",
      "};\n",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "React Functional Component with Props": {
    "prefix": "rcp",
    "body": [
      "import * as React from 'react';\n",
      "import { cn } from '@/lib/utils';\n",
      "export interface I${1:${TM_FILENAME_BASE}}Props {",
      "\tclassName: string,",
      "}",
      "const ${1:${TM_FILENAME_BASE}}: React.FC<I${1:${TM_FILENAME_BASE}}Props> = ({className, ...rest}) => {",
      "  return (",
      "    <div className={cn(['', className])} {...rest}>",
      "      $0",
      "    </div>",
      "  )",
      "};\n",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  //#endregion  //*======== React ===========

  //#region  //*=========== Commons ===========
  "Region": {
    "prefix": "reg",
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "body": [
      "//#region  //*=========== ${1} ===========",
      "${TM_SELECTED_TEXT}$0",
      "//#endregion  //*======== ${1} ==========="
    ]
  },
  "Region CSS": {
    "prefix": "regc",
    "scope": "css, scss",
    "body": [
      "/* #region  /**=========== ${1} =========== */",
      "${TM_SELECTED_TEXT}$0",
      "/* #endregion  /**======== ${1} =========== */"
    ]
  },
  //#endregion  //*======== Commons ===========

  //#region  //*=========== Next.js ===========
  "Next Pages": {
    "prefix": "np",
    "body": [
      "import * as React from 'react';\n",
      "import Layout from '@/app/components/layout';\n",
      "export default function ${1:${TM_FILENAME_BASE/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}}Page() {",
      "  return (",
      "    <Layout>",
      "      <main>\n",
      "        <section className=''>",
      "          <div className='layout py-20 min-h-screen'>",
      "            $0",
      "          </div>",
      "        </section>",
      "      </main>",
      "    </Layout>",
      "  )",
      "}"
    ]
  },
  "Next API": {
    "prefix": "napi",
    "body": [
      "import { NextApiRequest, NextApiResponse } from 'next';\n",
      "export default async function handler(req: NextApiRequest, res: NextApiResponse) {",
      "  if (req.method === 'GET') {",
      "    res.status(200).json({ name: 'Bambang' });",
      "  } else {",
      "    res.status(405).json({ message: 'Method Not Allowed' });",
      "  }",
      "}"
    ]
  },
  "Import Next Link": {
    "prefix": "iml",
    "body": ["import Link from 'next/link';"]
  },
  //#endregion  //*======== Next.js ===========

  //#region  //*=========== Snippet Wrap ===========
  "Wrap with Fragment": {
    "prefix": "ff",
    "body": ["<>", "\t${TM_SELECTED_TEXT}", "</>"]
  },
  "Wrap with clsx": {
    "prefix": "cx",
    "body": ["{clsx([${TM_SELECTED_TEXT}$0])}"]
  },
  "Wrap with clsxm": {
    "prefix": "cxm",
    "body": ["{clsxm([${TM_SELECTED_TEXT}$0, className])}"]
  },
  //#endregion  //*======== Snippet Wrap ===========

  "Logger": {
    "prefix": "lg",
    "body": [
      "logger({ ${1:${CLIPBOARD}} }, '${TM_FILENAME} line ${TM_LINE_NUMBER}')"
    ]
  }
}
